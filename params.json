{
  "name": "React-fileupload-progress",
  "tagline": "React component of Input file and progress bar",
  "body": "# React-fileupload-progress [![Build Status](https://travis-ci.org/georgeOsdDev/react-fileupload-progress.svg?branch=develop)](https://travis-ci.org/georgeOsdDev/react-fileupload-progress) [![npm version](https://badge.fury.io/js/react-fileupload-progress.svg)](http://badge.fury.io/js/react-fileupload-progress)\r\n\r\n[![Gyazo](https://i.gyazo.com/581f05bc048cd38ea8e5a2f535b17bed.gif)](https://gyazo.com/581f05bc048cd38ea8e5a2f535b17bed)\r\n\r\nReact component of Input file and progress bar.\r\nThis component watch xhr uploading process, and trigger some events.\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install --save react-fileupload-progress\r\n```\r\n\r\n## API\r\n\r\n### `FileUploadProgress`\r\n\r\n#### Props\r\n\r\n* `url`: File upload endpoint url.\r\n  `React.PropTypes.string.isRequired`\r\n\r\n##### Events\r\n\r\n  These handler will called on XMLHttpRequest's progress events.\r\n  See also [Using XMLHttpRequest on MDN](https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest).\r\n\r\n* `onProgress`: Called when `xhr` was loaded. Third parameter is the progress of uploading process(0 ~ 100).\r\n  `React.PropTypes.func(e, request, progress)`\r\n\r\n* `onLoad`: Called when `xhr` was loaded.\r\n  `React.PropTypes.func(e, request)`\r\n\r\n* `onError`: Called when `xhr` become error.\r\n  `React.PropTypes.func(e, request)`\r\n\r\n* `onAbort`: Called when `xhr` was aborted.\r\n  `React.PropTypes.func(e, request)`\r\n\r\n##### Customization\r\n\r\n  It is possible to customize view and form.\r\n\r\n* `formRenderer`: For custom form rendering, **Typo is fixed(#4) from v0.2.0**\r\n  `onSubmitHandler` should be attach on your custom form's submit event. When `onSubmitHandler` is called, this component start observe `xhr`.\r\n  `React.PropTypes.func(onSubmitHandler)`\r\n\r\n* `formGetter`: If custom `formRenderer` is used, you need to implement this method and must return `FormData` object.\r\n  `React.PropTypes.func => {return form}`\r\n\r\n* `progressRenderer`: For custom progress rendering,\r\n  First parameter is the progress of uploading process(0 ~ 100).\r\n  If `xhr` has error, second parameter will be `true`.\r\n  When third parameter is called, current `xhr` will be aborted.\r\n  `React.PropTypes.func(progress, hasError, cancelHandler)`\r\n\r\n* `formCustomizer`: Called before `xhr` send. You can add any custom form parameter(e.g: id, name, etc) with this method. Must return `form` given as argument.\r\n  `React.PropTypes.func(form) => {return form}`\r\n\r\n* `beforeSend`: Called before `xhr` send. You can customize `xhr`(e.g: HTTPHeader, etc) with this method. Must return `request` given as argument.\r\n  `React.PropTypes.func(request) => {return request}`\r\n\r\n[![Gyazo](https://i.gyazo.com/f6428f29681c9aab16fc62771bb1980d.gif)](https://gyazo.com/f6428f29681c9aab16fc62771bb1980d)\r\n\r\n\r\n## Usage example\r\n\r\n```javascript\r\n'use strict';\r\n\r\nimport React from 'react';\r\nimport FileUploadProgress  from 'react-fileupload-progress';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Default style</h3>\r\n        <FileUploadProgress key='ex1' url='http://localhost:3000/api/upload'\r\n          onProgress={(e, request, progress) => {console.log('progress', e, request, progress);}}\r\n          onLoad={ (e, request) => {console.log('load', e, request);}}\r\n          onError={ (e, request) => {console.log('error', e, request);}}\r\n          onAbort={ (e, request) => {console.log('abort', e, request);}}\r\n          />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nReact.render(<App/>, document.getElementById('out'));\r\n```\r\n\r\nSee also [example](https://github.com/georgeOsdDev/react-fileupload-progress/tree/develop/example)\r\n\r\n```bash\r\nnpm install\r\nnpm run start:example\r\n```\r\n\r\n## Build\r\n\r\n```bash\r\nnpm run build\r\n```\r\n\r\n## Tests\r\n\r\n```bash\r\nnpm test\r\n```\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}